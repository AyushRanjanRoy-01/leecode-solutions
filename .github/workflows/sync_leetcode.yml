name: Sync LeetCode Solutions

on:
  workflow_dispatch:        # Allow manual trigger
  schedule:
    - cron: "*/5 * * * *"   # Run every 5 minutes for testing

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install LeetCode CLI and jq
        run: |
          npm install -g leetcode-cli
          sudo apt-get update && sudo apt-get install -y jq

      - name: Configure LeetCode CLI
        run: |
          leetcode user -c ${{ secrets.LEETCODE_SESSION }}

      - name: Fetch Accepted Solutions and Organize
        run: |
          mkdir -p solutions

          leetcode show --all --format=json > all_solutions.json

          jq -c '.stat_status_pairs[]' all_solutions.json | while read -r problem; do
            title_slug=$(echo "$problem" | jq -r '.stat.question__title_slug')
            level=$(echo "$problem" | jq -r '.difficulty.level')
            lang="python"  # Replace with your preferred language
            file_ext="py"  # Adjust file extension if needed

            # Map difficulty level to folder
            case $level in
              1) folder="Easy";;
              2) folder="Medium";;
              3) folder="Hard";;
            esac

            mkdir -p "solutions/$folder"

            # Only fetch if file doesn't already exist
            if [ ! -f "solutions/$folder/${title_slug}.${file_ext}" ]; then
              echo "ðŸ“¥ Fetching $title_slug into $folder..."
              leetcode show $title_slug --lang $lang > "solutions/$folder/${title_slug}.${file_ext}"
            else
              echo "âœ… Skipping $title_slug; already exists in $folder."
            fi
          done

      - name: Commit & Push
        run: |
          git config --global user.name "leetcode-bot"
          git config --global user.email "bot@example.com"
          git add solutions/
          if git diff --cached --quiet; then
            echo "âœ… No new solutions to commit."
          else
            git commit -m "Auto-sync LeetCode solutions"
            git push
          fi

